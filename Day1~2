Day1
크롤링이란?
인터넷에서 데이터를 검색해 필요한 정보를 색인 하는 것을 의미한다. 사용자가 데이터를 하나씩 검색하여 정보를 얻는 것부터 저장, 가공하는 과정을 대신 해주는 기술이라고 할 수 있다. 
이러한 크롤링을 해주는 프로그램을 '크롤러'라고 한다.

Day2
1.정적 크롤링
정적크롤링은 웹에 있는 정적인 데이터를 수집할 때 사용합니다.
이때 '정적인 데이터'란 로그인과 같은 사전 작업 없이 바로 볼 수 있는 데이터로,
새로고침을 하지 않는 이상 변하지 않는 데이터를 의미합니다.

따라서 정적크롤링은 한 번 주소를 통해 요청하고 결과를 받는 것으로 끝입니다.
'로그인 → 페이지 이동 → 클릭 → 데이터 수집 → 뒤로 가기'와 같은 연속적인 작업을 수행할 수는 없습니다.

예를 들면 '네이버 실시간 검색 순위', '음악 차트 순위'와 같은 데이터를 수집하는 것입니다.
정적크롤링은 주로 한 페이지 안에 원하는 정보가 모두 드러난 경우 사용합니다.

장점
그래서 한 페이지 내에서 모든 작업이 이루어지기 때문에 속도가 매우 빠르다는 장점을 가집니다.
단점
하지만 페이지의 변화가 조금이라도 필요한 경우에는 적용이 힘들기 때문에 수집 대상에 한계가 있습니다.


2.동적 크롤링
동적크롤링은 웹에 있는 동적인 데이터를 수집할 때 사용합니다.
여기서 '동적인 데이터'란 입력, 클릭, 로그인 등과 같이
페이지 이동이 있어야지 얻을 수 있는 데이터를 의미합니다.

장점
수집 대상에 한계가 거의 없다는 큰 장점을 가지고 있습니다.
단점
정적크롤링 보다는 단계적인 접근이 필요하기 때문에 수집 속도가 느리지만,

예를 들면 메일 내용, 인스타그램 게시물과 같은 데이터를 수집하는 것입니다.
동적크롤링은 페이지 이동이 필요하거나, 페이지 안에 원하는 정보가 숨겨져 있는 경우 사용합니다.

정적크롤링에서 살펴본 음악 차트의 경우, 동적크롤링을 사용한다면 제목, 가수, 앨범, 좋아요 뿐만 아니라 노래 가사까지 모두 수집할 수 있습니다.

Day3
*라이브러리
#기본 코드 1
import 라이브러리 : 해당 라이브러리 전체를 가져온다. 

#기본 코드 2
from 라이브러리 import 메소드 : 해당 라이브러리에 특정 메소드를 가져온다.

예시)
time 라이브러리
✔️ time.time()

첫 번째는 time 라이브러리의 내장함수 time() 입니다.

사용법은 소제목처럼 time.time() 입니다.

time.time()은 UTC(Universal Time Coordinated 협정 세계 표준시)를 사용하여 현재 시간을 실수 형태로 돌려주는 함수입니다.

1970년 1월 1일 0시 0분 0초를 기준으로 지난 시간을 초 단위로 돌려줍니다.

✔️ time.localtime()

두 번째는 time 라이브러리의 내장함수 localtime() 입니다.
import time

print(time.localtime())
time.struct_time(tm_year=2021, tm_mon=1, tm_mday=11, tm_hour=15, tm_min=25, tm_sec=58, tm_wday=0, tm_yday=11, tm_isdst=0)

현재 시간을 연도, 월, 일, 시, 분, 초, ...의 형태로 출력해줍니다.

✔️ time.sleep()

마지막은 time 라이브러리의 내장함수 sleep() 입니다.

import time

for i in range(10):
	print(i)
	time.sleep(1)

이 함수는 지정된 시간 동안 소스코드를 정지시킵니다.
